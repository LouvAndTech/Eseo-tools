name: 'ðŸš€ ESEO Tools Release'

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  update-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update manifest
        run: |
          cat manifest.json

          # Get the version from the tag and remove the v
          VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')

          # Update the manifest and popup with the new version
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" manifest.json
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" manifest-chrome.json
          sed -i "s/<p id=\"version\"><\/p>/<p id=\"version\">v$VERSION<\/p>/" popup/index.html

  firefox-build:
    runs-on: ubuntu-latest
    needs: update-manifest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: web-ext build
        id: web-ext-build
        uses: kewisch/action-web-ext@main
        with:
          cmd: build
          source: .

      - name: web-ext sign
        id: web-ext-sign
        uses: kewisch/action-web-ext@main
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          channel: unlisted
          apiKey: ${{ secrets.FIREFOX_JWT_ISSUER }}
          apiSecret: ${{ secrets.FIREFOX_JWT_SECRET }}
          timeout: 900000

      - name: Upload Firefox Extension
        uses: actions/upload-artifact@v3
        with:
          name: firefox-extension
          path: ${{ steps.web-ext-build.outputs.target }}

  chrome-build:
    runs-on: ubuntu-latest
    needs: update-manifest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Zip for Chrome
        run: |
          rm manifest.json
          mv manifest-chrome.json manifest.json
          zip -r eseo-tools-for-chrome.zip . -x ".github/*" -x ".git/*"

      - name: Upload Chrome Extension
        uses: actions/upload-artifact@v3
        with:
          name: chrome-extension
          path: eseo-tools-for-chrome.zip

  safari-build:
    runs-on: macos-latest
    needs: update-manifest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Xcode tools
        run: xcode-select --install

      - name: Accept Xcode license
        run: sudo xcodebuild -license accept

      - name: Convert to Safari Web Extension
        run: |
          xcrun safari-web-extension-converter . --no-open --project-location ./SafariWebExtensionProject

      - name: Build the Safari extension
        run: |
          cd SafariWebExtensionProject
          xcodebuild -scheme "SafariWebExtension" -configuration Release

      - name: Upload Safari Extension
        uses: actions/upload-artifact@v3
        with:
          name: safari-web-extension
          path: ./SafariWebExtensionProject

  publish-release:
    runs-on: ubuntu-latest
    needs:
      - firefox-build
      - chrome-build
      - safari-build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: firefox-extension
        
      - name: Download Chrome Extension
        uses: actions/download-artifact@v3
        with:
          name: chrome-extension

      - name: Download Safari Extension
        uses: actions/download-artifact@v3
        with:
          name: safari-web-extension

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          body: |
            ## How to install

            For Firefox, Simply download the `.xpi` file under this release, and it will automatically install it on your browser.

            For Chrome, you must follow these steps:
            - Download the `eseo-tools-for-chrome.zip` under this release
            - Unzip it where you want to
            - Go to chromium/chrome *Extension* settings.
            - Click to check *Developer mode*
            - Click *Load unpacked extension* and select the folder you unziped

            For Safari, you can download the Safari Web Extension package and install it through Xcode for development or submission to the App Store.
          files: |
            firefox-extension
            chrome-extension
            safari-web-extension